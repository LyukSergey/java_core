package medium.immutableClasses;

import java.math.BigDecimal;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;
import java.util.stream.Collectors;

public class ImmutableSolutionExample {

    public static void main(String[] args) {
        // –°—Ç–≤–æ—Ä—é—î–º–æ immutable —Ç–æ–≤–∞—Ä —ñ –¥–æ–¥–∞—î–º–æ –π–æ–≥–æ –≤ immutable –∫–æ—à–∏–∫
        ImmutableItem laptop = new ImmutableItem("Super Laptop", new BigDecimal("1500.00"));
        ImmutableShoppingCart cart = new ImmutableShoppingCart(laptop);

        System.out.println("üõí –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω –∫–æ—à–∏–∫–∞: " + cart.getItems());
        System.out.println("üí∞ –ü–æ—á–∞—Ç–∫–æ–≤–∞ —Å—É–º–∞: " + cart.calculateTotal());
        System.out.println("-------------------------------------------------");
        System.out.println("üîí –ü–æ—á–∏–Ω–∞—î–º–æ –Ω–∞–¥—ñ–π–Ω–∏–π –ø—Ä–æ—Ü–µ—Å –æ–ø–ª–∞—Ç–∏...");

        try (ExecutorService executor = Executors.newFixedThreadPool(2)) {
            executor.submit(() -> {
                System.out.println("  [Checkout] –ü–æ—á–∏–Ω–∞—é —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –¥–ª—è –≤–µ—Ä—Å—ñ—ó –∫–æ—à–∏–∫–∞: " + cart.hashCode());
                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                }
                BigDecimal finalPrice = cart.calculateTotal();
                System.out.println("  [Checkout] üèÅ –§—ñ–Ω–∞–ª—å–Ω–∞ —Å—É–º–∞ –¥–æ —Å–ø–ª–∞—Ç–∏: " + finalPrice + " (–∫–æ—Ä–µ–∫—Ç–Ω–∞!)");
            });

            executor.submit(() -> {
                System.out.println("  [Promotion] –ó–Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ü—ñ–π–Ω–∏–π —Ç–æ–≤–∞—Ä! –°—Ç–≤–æ—Ä—é—é –Ω–æ–≤–∏–π –∫–æ—à–∏–∫ –∑—ñ –∑–Ω–∏–∂–∫–æ—é...");

                ImmutableShoppingCart discountedCart = new ImmutableShoppingCart(
                        cart.getItems().stream()
                                .map(item -> item.getName().equals("Super Laptop") ? item.withPrice(new BigDecimal("999.00")) : item)
                                .collect(Collectors.toList())
                );

                System.out.println("  [Promotion] ‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤–∏–π –∫–æ—à–∏–∫: " + discountedCart.hashCode());
                System.out.println("  [Promotion] ‚úÖ –°—É–º–∞ –≤ –Ω–æ–≤–æ–º—É –∫–æ—à–∏–∫—É: " + discountedCart.calculateTotal());
            });

            executor.awaitTermination(5, TimeUnit.SECONDS);

            System.out.println("-------------------------------------------------");
            System.out.println("üõ°Ô∏è –ö–Ü–ù–¶–ï–í–ò–ô –°–¢–ê–ù –û–†–ò–ì–Ü–ù–ê–õ–¨–ù–û–ì–û –ö–û–®–ò–ö–ê: " + cart.getItems());
            System.out.println("‚úÖ –û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç –∑–∞–ª–∏—à–∏–≤—Å—è –Ω–µ–¥–æ—Ç–æ—Ä–∫–∞–Ω–∏–º. –ü—Ä–æ–±–ª–µ–º–∞ Race Condition –≤–∏—Ä—ñ—à–µ–Ω–∞!");
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        }
    }

}
